// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class MinWithdrawalDelayBlocksSet extends ethereum.Event {
  get params(): MinWithdrawalDelayBlocksSet__Params {
    return new MinWithdrawalDelayBlocksSet__Params(this);
  }
}

export class MinWithdrawalDelayBlocksSet__Params {
  _event: MinWithdrawalDelayBlocksSet;

  constructor(event: MinWithdrawalDelayBlocksSet) {
    this._event = event;
  }

  get previousValue(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OperatorDetailsModified extends ethereum.Event {
  get params(): OperatorDetailsModified__Params {
    return new OperatorDetailsModified__Params(this);
  }
}

export class OperatorDetailsModified__Params {
  _event: OperatorDetailsModified;

  constructor(event: OperatorDetailsModified) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOperatorDetails(): OperatorDetailsModifiedNewOperatorDetailsStruct {
    return changetype<OperatorDetailsModifiedNewOperatorDetailsStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class OperatorDetailsModifiedNewOperatorDetailsStruct extends ethereum.Tuple {
  get earningsReceiver(): Address {
    return this[0].toAddress();
  }

  get delegationApprover(): Address {
    return this[1].toAddress();
  }

  get stakerOptOutWindowBlocks(): BigInt {
    return this[2].toBigInt();
  }
}

export class OperatorMetadataURIUpdated extends ethereum.Event {
  get params(): OperatorMetadataURIUpdated__Params {
    return new OperatorMetadataURIUpdated__Params(this);
  }
}

export class OperatorMetadataURIUpdated__Params {
  _event: OperatorMetadataURIUpdated;

  constructor(event: OperatorMetadataURIUpdated) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get metadataURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OperatorRegistered extends ethereum.Event {
  get params(): OperatorRegistered__Params {
    return new OperatorRegistered__Params(this);
  }
}

export class OperatorRegistered__Params {
  _event: OperatorRegistered;

  constructor(event: OperatorRegistered) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operatorDetails(): OperatorRegisteredOperatorDetailsStruct {
    return changetype<OperatorRegisteredOperatorDetailsStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class OperatorRegisteredOperatorDetailsStruct extends ethereum.Tuple {
  get earningsReceiver(): Address {
    return this[0].toAddress();
  }

  get delegationApprover(): Address {
    return this[1].toAddress();
  }

  get stakerOptOutWindowBlocks(): BigInt {
    return this[2].toBigInt();
  }
}

export class OperatorSharesDecreased extends ethereum.Event {
  get params(): OperatorSharesDecreased__Params {
    return new OperatorSharesDecreased__Params(this);
  }
}

export class OperatorSharesDecreased__Params {
  _event: OperatorSharesDecreased;

  constructor(event: OperatorSharesDecreased) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get strategy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OperatorSharesIncreased extends ethereum.Event {
  get params(): OperatorSharesIncreased__Params {
    return new OperatorSharesIncreased__Params(this);
  }
}

export class OperatorSharesIncreased__Params {
  _event: OperatorSharesIncreased;

  constructor(event: OperatorSharesIncreased) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get strategy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get shares(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class StakerDelegated extends ethereum.Event {
  get params(): StakerDelegated__Params {
    return new StakerDelegated__Params(this);
  }
}

export class StakerDelegated__Params {
  _event: StakerDelegated;

  constructor(event: StakerDelegated) {
    this._event = event;
  }

  get staker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StakerForceUndelegated extends ethereum.Event {
  get params(): StakerForceUndelegated__Params {
    return new StakerForceUndelegated__Params(this);
  }
}

export class StakerForceUndelegated__Params {
  _event: StakerForceUndelegated;

  constructor(event: StakerForceUndelegated) {
    this._event = event;
  }

  get staker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StakerUndelegated extends ethereum.Event {
  get params(): StakerUndelegated__Params {
    return new StakerUndelegated__Params(this);
  }
}

export class StakerUndelegated__Params {
  _event: StakerUndelegated;

  constructor(event: StakerUndelegated) {
    this._event = event;
  }

  get staker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StrategyWithdrawalDelayBlocksSet extends ethereum.Event {
  get params(): StrategyWithdrawalDelayBlocksSet__Params {
    return new StrategyWithdrawalDelayBlocksSet__Params(this);
  }
}

export class StrategyWithdrawalDelayBlocksSet__Params {
  _event: StrategyWithdrawalDelayBlocksSet;

  constructor(event: StrategyWithdrawalDelayBlocksSet) {
    this._event = event;
  }

  get strategy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get previousValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrawalCompleted extends ethereum.Event {
  get params(): WithdrawalCompleted__Params {
    return new WithdrawalCompleted__Params(this);
  }
}

export class WithdrawalCompleted__Params {
  _event: WithdrawalCompleted;

  constructor(event: WithdrawalCompleted) {
    this._event = event;
  }

  get withdrawalRoot(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class WithdrawalMigrated extends ethereum.Event {
  get params(): WithdrawalMigrated__Params {
    return new WithdrawalMigrated__Params(this);
  }
}

export class WithdrawalMigrated__Params {
  _event: WithdrawalMigrated;

  constructor(event: WithdrawalMigrated) {
    this._event = event;
  }

  get oldWithdrawalRoot(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get newWithdrawalRoot(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class WithdrawalQueued extends ethereum.Event {
  get params(): WithdrawalQueued__Params {
    return new WithdrawalQueued__Params(this);
  }
}

export class WithdrawalQueued__Params {
  _event: WithdrawalQueued;

  constructor(event: WithdrawalQueued) {
    this._event = event;
  }

  get withdrawalRoot(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get withdrawal(): WithdrawalQueuedWithdrawalStruct {
    return changetype<WithdrawalQueuedWithdrawalStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class WithdrawalQueuedWithdrawalStruct extends ethereum.Tuple {
  get staker(): Address {
    return this[0].toAddress();
  }

  get delegatedTo(): Address {
    return this[1].toAddress();
  }

  get withdrawer(): Address {
    return this[2].toAddress();
  }

  get nonce(): BigInt {
    return this[3].toBigInt();
  }

  get startBlock(): BigInt {
    return this[4].toBigInt();
  }

  get strategies(): Array<Address> {
    return this[5].toAddressArray();
  }

  get shares(): Array<BigInt> {
    return this[6].toBigIntArray();
  }
}

export class DelegationManager__calculateWithdrawalRootInputWithdrawalStruct extends ethereum.Tuple {
  get staker(): Address {
    return this[0].toAddress();
  }

  get delegatedTo(): Address {
    return this[1].toAddress();
  }

  get withdrawer(): Address {
    return this[2].toAddress();
  }

  get nonce(): BigInt {
    return this[3].toBigInt();
  }

  get startBlock(): BigInt {
    return this[4].toBigInt();
  }

  get strategies(): Array<Address> {
    return this[5].toAddressArray();
  }

  get shares(): Array<BigInt> {
    return this[6].toBigIntArray();
  }
}

export class DelegationManager__queueWithdrawalsInputQueuedWithdrawalParamsStruct extends ethereum.Tuple {
  get strategies(): Array<Address> {
    return this[0].toAddressArray();
  }

  get shares(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get withdrawer(): Address {
    return this[2].toAddress();
  }
}

export class DelegationManager extends ethereum.SmartContract {
  static bind(address: Address): DelegationManager {
    return new DelegationManager("DelegationManager", address);
  }

  getOperatorShares(
    operator: Address,
    strategies: Array<Address>,
  ): Array<BigInt> {
    let result = super.call(
      "getOperatorShares",
      "getOperatorShares(address,address[]):(uint256[])",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddressArray(strategies),
      ],
    );

    return result[0].toBigIntArray();
  }

  try_getOperatorShares(
    operator: Address,
    strategies: Array<Address>,
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getOperatorShares",
      "getOperatorShares(address,address[]):(uint256[])",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddressArray(strategies),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  calculateWithdrawalRoot(
    withdrawal: DelegationManager__calculateWithdrawalRootInputWithdrawalStruct,
  ): Bytes {
    let result = super.call(
      "calculateWithdrawalRoot",
      "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[])):(bytes32)",
      [ethereum.Value.fromTuple(withdrawal)],
    );

    return result[0].toBytes();
  }

  try_calculateWithdrawalRoot(
    withdrawal: DelegationManager__calculateWithdrawalRootInputWithdrawalStruct,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "calculateWithdrawalRoot",
      "calculateWithdrawalRoot((address,address,address,uint256,uint32,address[],uint256[])):(bytes32)",
      [ethereum.Value.fromTuple(withdrawal)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  queueWithdrawals(
    queuedWithdrawalParams: Array<DelegationManager__queueWithdrawalsInputQueuedWithdrawalParamsStruct>,
  ): Array<Bytes> {
    let result = super.call(
      "queueWithdrawals",
      "queueWithdrawals((address[],uint256[],address)[]):(bytes32[])",
      [ethereum.Value.fromTupleArray(queuedWithdrawalParams)],
    );

    return result[0].toBytesArray();
  }

  try_queueWithdrawals(
    queuedWithdrawalParams: Array<DelegationManager__queueWithdrawalsInputQueuedWithdrawalParamsStruct>,
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "queueWithdrawals",
      "queueWithdrawals((address[],uint256[],address)[]):(bytes32[])",
      [ethereum.Value.fromTupleArray(queuedWithdrawalParams)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }
}

export class CompleteQueuedWithdrawalCall extends ethereum.Call {
  get inputs(): CompleteQueuedWithdrawalCall__Inputs {
    return new CompleteQueuedWithdrawalCall__Inputs(this);
  }

  get outputs(): CompleteQueuedWithdrawalCall__Outputs {
    return new CompleteQueuedWithdrawalCall__Outputs(this);
  }
}

export class CompleteQueuedWithdrawalCall__Inputs {
  _call: CompleteQueuedWithdrawalCall;

  constructor(call: CompleteQueuedWithdrawalCall) {
    this._call = call;
  }

  get withdrawal(): CompleteQueuedWithdrawalCallWithdrawalStruct {
    return changetype<CompleteQueuedWithdrawalCallWithdrawalStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get middlewareTimesIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get receiveAsTokens(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class CompleteQueuedWithdrawalCall__Outputs {
  _call: CompleteQueuedWithdrawalCall;

  constructor(call: CompleteQueuedWithdrawalCall) {
    this._call = call;
  }
}

export class CompleteQueuedWithdrawalCallWithdrawalStruct extends ethereum.Tuple {
  get staker(): Address {
    return this[0].toAddress();
  }

  get delegatedTo(): Address {
    return this[1].toAddress();
  }

  get withdrawer(): Address {
    return this[2].toAddress();
  }

  get nonce(): BigInt {
    return this[3].toBigInt();
  }

  get startBlock(): BigInt {
    return this[4].toBigInt();
  }

  get strategies(): Array<Address> {
    return this[5].toAddressArray();
  }

  get shares(): Array<BigInt> {
    return this[6].toBigIntArray();
  }
}

export class CompleteQueuedWithdrawalsCall extends ethereum.Call {
  get inputs(): CompleteQueuedWithdrawalsCall__Inputs {
    return new CompleteQueuedWithdrawalsCall__Inputs(this);
  }

  get outputs(): CompleteQueuedWithdrawalsCall__Outputs {
    return new CompleteQueuedWithdrawalsCall__Outputs(this);
  }
}

export class CompleteQueuedWithdrawalsCall__Inputs {
  _call: CompleteQueuedWithdrawalsCall;

  constructor(call: CompleteQueuedWithdrawalsCall) {
    this._call = call;
  }

  get withdrawals(): Array<CompleteQueuedWithdrawalsCallWithdrawalsStruct> {
    return this._call.inputValues[0].value.toTupleArray<CompleteQueuedWithdrawalsCallWithdrawalsStruct>();
  }

  get tokens(): Array<Array<Address>> {
    return this._call.inputValues[1].value.toAddressMatrix();
  }

  get middlewareTimesIndexes(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get receiveAsTokens(): Array<boolean> {
    return this._call.inputValues[3].value.toBooleanArray();
  }
}

export class CompleteQueuedWithdrawalsCall__Outputs {
  _call: CompleteQueuedWithdrawalsCall;

  constructor(call: CompleteQueuedWithdrawalsCall) {
    this._call = call;
  }
}

export class CompleteQueuedWithdrawalsCallWithdrawalsStruct extends ethereum.Tuple {
  get staker(): Address {
    return this[0].toAddress();
  }

  get delegatedTo(): Address {
    return this[1].toAddress();
  }

  get withdrawer(): Address {
    return this[2].toAddress();
  }

  get nonce(): BigInt {
    return this[3].toBigInt();
  }

  get startBlock(): BigInt {
    return this[4].toBigInt();
  }

  get strategies(): Array<Address> {
    return this[5].toAddressArray();
  }

  get shares(): Array<BigInt> {
    return this[6].toBigIntArray();
  }
}

export class QueueWithdrawalsCall extends ethereum.Call {
  get inputs(): QueueWithdrawalsCall__Inputs {
    return new QueueWithdrawalsCall__Inputs(this);
  }

  get outputs(): QueueWithdrawalsCall__Outputs {
    return new QueueWithdrawalsCall__Outputs(this);
  }
}

export class QueueWithdrawalsCall__Inputs {
  _call: QueueWithdrawalsCall;

  constructor(call: QueueWithdrawalsCall) {
    this._call = call;
  }

  get queuedWithdrawalParams(): Array<QueueWithdrawalsCallQueuedWithdrawalParamsStruct> {
    return this._call.inputValues[0].value.toTupleArray<QueueWithdrawalsCallQueuedWithdrawalParamsStruct>();
  }
}

export class QueueWithdrawalsCall__Outputs {
  _call: QueueWithdrawalsCall;

  constructor(call: QueueWithdrawalsCall) {
    this._call = call;
  }

  get value0(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class QueueWithdrawalsCallQueuedWithdrawalParamsStruct extends ethereum.Tuple {
  get strategies(): Array<Address> {
    return this[0].toAddressArray();
  }

  get shares(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get withdrawer(): Address {
    return this[2].toAddress();
  }
}
