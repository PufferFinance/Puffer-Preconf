// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AuthorityUpdated extends ethereum.Event {
  get params(): AuthorityUpdated__Params {
    return new AuthorityUpdated__Params(this);
  }
}

export class AuthorityUpdated__Params {
  _event: AuthorityUpdated;

  constructor(event: AuthorityUpdated) {
    this._event = event;
  }

  get authority(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ChainIDSet extends ethereum.Event {
  get params(): ChainIDSet__Params {
    return new ChainIDSet__Params(this);
  }
}

export class ChainIDSet__Params {
  _event: ChainIDSet;

  constructor(event: ChainIDSet) {
    this._event = event;
  }

  get index(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get chainID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DeregistrationDelaySet extends ethereum.Event {
  get params(): DeregistrationDelaySet__Params {
    return new DeregistrationDelaySet__Params(this);
  }
}

export class DeregistrationDelaySet__Params {
  _event: DeregistrationDelaySet;

  constructor(event: DeregistrationDelaySet) {
    this._event = event;
  }

  get oldDelay(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newDelay(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OperatorCommitmentChangeInitiated extends ethereum.Event {
  get params(): OperatorCommitmentChangeInitiated__Params {
    return new OperatorCommitmentChangeInitiated__Params(this);
  }
}

export class OperatorCommitmentChangeInitiated__Params {
  _event: OperatorCommitmentChangeInitiated;

  constructor(event: OperatorCommitmentChangeInitiated) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldCommitment(): OperatorCommitmentChangeInitiatedOldCommitmentStruct {
    return changetype<OperatorCommitmentChangeInitiatedOldCommitmentStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }

  get newCommitment(): OperatorCommitmentChangeInitiatedNewCommitmentStruct {
    return changetype<OperatorCommitmentChangeInitiatedNewCommitmentStruct>(
      this._event.parameters[2].value.toTuple(),
    );
  }

  get validAfter(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OperatorCommitmentChangeInitiatedOldCommitmentStruct extends ethereum.Tuple {
  get delegateKey(): Bytes {
    return this[0].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[1].toBigInt();
  }
}

export class OperatorCommitmentChangeInitiatedNewCommitmentStruct extends ethereum.Tuple {
  get delegateKey(): Bytes {
    return this[0].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[1].toBigInt();
  }
}

export class OperatorCommitmentSet extends ethereum.Event {
  get params(): OperatorCommitmentSet__Params {
    return new OperatorCommitmentSet__Params(this);
  }
}

export class OperatorCommitmentSet__Params {
  _event: OperatorCommitmentSet;

  constructor(event: OperatorCommitmentSet) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldCommitment(): OperatorCommitmentSetOldCommitmentStruct {
    return changetype<OperatorCommitmentSetOldCommitmentStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }

  get newCommitment(): OperatorCommitmentSetNewCommitmentStruct {
    return changetype<OperatorCommitmentSetNewCommitmentStruct>(
      this._event.parameters[2].value.toTuple(),
    );
  }
}

export class OperatorCommitmentSetOldCommitmentStruct extends ethereum.Tuple {
  get delegateKey(): Bytes {
    return this[0].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[1].toBigInt();
  }
}

export class OperatorCommitmentSetNewCommitmentStruct extends ethereum.Tuple {
  get delegateKey(): Bytes {
    return this[0].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[1].toBigInt();
  }
}

export class OperatorDeregisterStarted extends ethereum.Event {
  get params(): OperatorDeregisterStarted__Params {
    return new OperatorDeregisterStarted__Params(this);
  }
}

export class OperatorDeregisterStarted__Params {
  _event: OperatorDeregisterStarted;

  constructor(event: OperatorDeregisterStarted) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OperatorDeregistered extends ethereum.Event {
  get params(): OperatorDeregistered__Params {
    return new OperatorDeregistered__Params(this);
  }
}

export class OperatorDeregistered__Params {
  _event: OperatorDeregistered;

  constructor(event: OperatorDeregistered) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OperatorRegistered extends ethereum.Event {
  get params(): OperatorRegistered__Params {
    return new OperatorRegistered__Params(this);
  }
}

export class OperatorRegistered__Params {
  _event: OperatorRegistered;

  constructor(event: OperatorRegistered) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OperatorRegisteredWithCommitment extends ethereum.Event {
  get params(): OperatorRegisteredWithCommitment__Params {
    return new OperatorRegisteredWithCommitment__Params(this);
  }
}

export class OperatorRegisteredWithCommitment__Params {
  _event: OperatorRegisteredWithCommitment;

  constructor(event: OperatorRegisteredWithCommitment) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get commitment(): OperatorRegisteredWithCommitmentCommitmentStruct {
    return changetype<OperatorRegisteredWithCommitmentCommitmentStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class OperatorRegisteredWithCommitmentCommitmentStruct extends ethereum.Tuple {
  get delegateKey(): Bytes {
    return this[0].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[1].toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ValidatorDeregistered extends ethereum.Event {
  get params(): ValidatorDeregistered__Params {
    return new ValidatorDeregistered__Params(this);
  }
}

export class ValidatorDeregistered__Params {
  _event: ValidatorDeregistered;

  constructor(event: ValidatorDeregistered) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get blsPubKeyHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class ValidatorRegistered extends ethereum.Event {
  get params(): ValidatorRegistered__Params {
    return new ValidatorRegistered__Params(this);
  }
}

export class ValidatorRegistered__Params {
  _event: ValidatorRegistered;

  constructor(event: ValidatorRegistered) {
    this._event = event;
  }

  get podOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get delegateKey(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get blsPubKeyHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get validatorIndex(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class UniFiAVSManager__getOperatorResultValue0Struct extends ethereum.Tuple {
  get commitment(): UniFiAVSManager__getOperatorResultValue0CommitmentStruct {
    return changetype<UniFiAVSManager__getOperatorResultValue0CommitmentStruct>(
      this[0].toTuple(),
    );
  }

  get pendingCommitment(): UniFiAVSManager__getOperatorResultValue0PendingCommitmentStruct {
    return changetype<UniFiAVSManager__getOperatorResultValue0PendingCommitmentStruct>(
      this[1].toTuple(),
    );
  }

  get validatorCount(): BigInt {
    return this[2].toBigInt();
  }

  get startDeregisterOperatorBlock(): BigInt {
    return this[3].toBigInt();
  }

  get commitmentValidAfter(): BigInt {
    return this[4].toBigInt();
  }

  get isRegistered(): boolean {
    return this[5].toBoolean();
  }
}

export class UniFiAVSManager__getOperatorResultValue0CommitmentStruct extends ethereum.Tuple {
  get delegateKey(): Bytes {
    return this[0].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[1].toBigInt();
  }
}

export class UniFiAVSManager__getOperatorResultValue0PendingCommitmentStruct extends ethereum.Tuple {
  get delegateKey(): Bytes {
    return this[0].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[1].toBigInt();
  }
}

export class UniFiAVSManager__getValidatorResultValue0Struct extends ethereum.Tuple {
  get operator(): Address {
    return this[0].toAddress();
  }

  get eigenPod(): Address {
    return this[1].toAddress();
  }

  get validatorIndex(): BigInt {
    return this[2].toBigInt();
  }

  get status(): i32 {
    return this[3].toI32();
  }

  get delegateKey(): Bytes {
    return this[4].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[5].toBigInt();
  }

  get backedByStake(): boolean {
    return this[6].toBoolean();
  }

  get registered(): boolean {
    return this[7].toBoolean();
  }
}

export class UniFiAVSManager__getValidator1ResultValue0Struct extends ethereum.Tuple {
  get operator(): Address {
    return this[0].toAddress();
  }

  get eigenPod(): Address {
    return this[1].toAddress();
  }

  get validatorIndex(): BigInt {
    return this[2].toBigInt();
  }

  get status(): i32 {
    return this[3].toI32();
  }

  get delegateKey(): Bytes {
    return this[4].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[5].toBigInt();
  }

  get backedByStake(): boolean {
    return this[6].toBoolean();
  }

  get registered(): boolean {
    return this[7].toBoolean();
  }
}

export class UniFiAVSManager__getValidatorsResultValue0Struct extends ethereum.Tuple {
  get operator(): Address {
    return this[0].toAddress();
  }

  get eigenPod(): Address {
    return this[1].toAddress();
  }

  get validatorIndex(): BigInt {
    return this[2].toBigInt();
  }

  get status(): i32 {
    return this[3].toI32();
  }

  get delegateKey(): Bytes {
    return this[4].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[5].toBigInt();
  }

  get backedByStake(): boolean {
    return this[6].toBoolean();
  }

  get registered(): boolean {
    return this[7].toBoolean();
  }
}

export class UniFiAVSManager extends ethereum.SmartContract {
  static bind(address: Address): UniFiAVSManager {
    return new UniFiAVSManager("UniFiAVSManager", address);
  }

  AVS_DIRECTORY(): Address {
    let result = super.call("AVS_DIRECTORY", "AVS_DIRECTORY():(address)", []);

    return result[0].toAddress();
  }

  try_AVS_DIRECTORY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "AVS_DIRECTORY",
      "AVS_DIRECTORY():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  BEACON_CHAIN_STRATEGY(): Address {
    let result = super.call(
      "BEACON_CHAIN_STRATEGY",
      "BEACON_CHAIN_STRATEGY():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_BEACON_CHAIN_STRATEGY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "BEACON_CHAIN_STRATEGY",
      "BEACON_CHAIN_STRATEGY():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  EIGEN_DELEGATION_MANAGER(): Address {
    let result = super.call(
      "EIGEN_DELEGATION_MANAGER",
      "EIGEN_DELEGATION_MANAGER():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_EIGEN_DELEGATION_MANAGER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "EIGEN_DELEGATION_MANAGER",
      "EIGEN_DELEGATION_MANAGER():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  EIGEN_POD_MANAGER(): Address {
    let result = super.call(
      "EIGEN_POD_MANAGER",
      "EIGEN_POD_MANAGER():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_EIGEN_POD_MANAGER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "EIGEN_POD_MANAGER",
      "EIGEN_POD_MANAGER():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  UPGRADE_INTERFACE_VERSION(): string {
    let result = super.call(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );

    return result[0].toString();
  }

  try_UPGRADE_INTERFACE_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  authority(): Address {
    let result = super.call("authority", "authority():(address)", []);

    return result[0].toAddress();
  }

  try_authority(): ethereum.CallResult<Address> {
    let result = super.tryCall("authority", "authority():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  avsDirectory(): Address {
    let result = super.call("avsDirectory", "avsDirectory():(address)", []);

    return result[0].toAddress();
  }

  try_avsDirectory(): ethereum.CallResult<Address> {
    let result = super.tryCall("avsDirectory", "avsDirectory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  bitmapToChainIDs(bitmap: BigInt): Array<BigInt> {
    let result = super.call(
      "bitmapToChainIDs",
      "bitmapToChainIDs(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(bitmap)],
    );

    return result[0].toBigIntArray();
  }

  try_bitmapToChainIDs(bitmap: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "bitmapToChainIDs",
      "bitmapToChainIDs(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(bitmap)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getBitmapIndex(chainID: BigInt): i32 {
    let result = super.call(
      "getBitmapIndex",
      "getBitmapIndex(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(chainID)],
    );

    return result[0].toI32();
  }

  try_getBitmapIndex(chainID: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getBitmapIndex",
      "getBitmapIndex(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(chainID)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getChainID(index: i32): BigInt {
    let result = super.call("getChainID", "getChainID(uint8):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(index)),
    ]);

    return result[0].toBigInt();
  }

  try_getChainID(index: i32): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getChainID", "getChainID(uint8):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(index)),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDeregistrationDelay(): BigInt {
    let result = super.call(
      "getDeregistrationDelay",
      "getDeregistrationDelay():(uint64)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getDeregistrationDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDeregistrationDelay",
      "getDeregistrationDelay():(uint64)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOperator(
    operator: Address,
  ): UniFiAVSManager__getOperatorResultValue0Struct {
    let result = super.call(
      "getOperator",
      "getOperator(address):(((bytes,uint256),(bytes,uint256),uint128,uint128,uint128,bool))",
      [ethereum.Value.fromAddress(operator)],
    );

    return changetype<UniFiAVSManager__getOperatorResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getOperator(
    operator: Address,
  ): ethereum.CallResult<UniFiAVSManager__getOperatorResultValue0Struct> {
    let result = super.tryCall(
      "getOperator",
      "getOperator(address):(((bytes,uint256),(bytes,uint256),uint128,uint128,uint128,bool))",
      [ethereum.Value.fromAddress(operator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<UniFiAVSManager__getOperatorResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getOperatorRestakedStrategies(operator: Address): Array<Address> {
    let result = super.call(
      "getOperatorRestakedStrategies",
      "getOperatorRestakedStrategies(address):(address[])",
      [ethereum.Value.fromAddress(operator)],
    );

    return result[0].toAddressArray();
  }

  try_getOperatorRestakedStrategies(
    operator: Address,
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getOperatorRestakedStrategies",
      "getOperatorRestakedStrategies(address):(address[])",
      [ethereum.Value.fromAddress(operator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getRestakeableStrategies(): Array<Address> {
    let result = super.call(
      "getRestakeableStrategies",
      "getRestakeableStrategies():(address[])",
      [],
    );

    return result[0].toAddressArray();
  }

  try_getRestakeableStrategies(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getRestakeableStrategies",
      "getRestakeableStrategies():(address[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getValidator(
    validatorIndex: BigInt,
  ): UniFiAVSManager__getValidatorResultValue0Struct {
    let result = super.call(
      "getValidator",
      "getValidator(uint256):((address,address,uint64,uint8,bytes,uint256,bool,bool))",
      [ethereum.Value.fromUnsignedBigInt(validatorIndex)],
    );

    return changetype<UniFiAVSManager__getValidatorResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getValidator(
    validatorIndex: BigInt,
  ): ethereum.CallResult<UniFiAVSManager__getValidatorResultValue0Struct> {
    let result = super.tryCall(
      "getValidator",
      "getValidator(uint256):((address,address,uint64,uint8,bytes,uint256,bool,bool))",
      [ethereum.Value.fromUnsignedBigInt(validatorIndex)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<UniFiAVSManager__getValidatorResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getValidator1(
    blsPubKeyHash: Bytes,
  ): UniFiAVSManager__getValidator1ResultValue0Struct {
    let result = super.call(
      "getValidator",
      "getValidator(bytes32):((address,address,uint64,uint8,bytes,uint256,bool,bool))",
      [ethereum.Value.fromFixedBytes(blsPubKeyHash)],
    );

    return changetype<UniFiAVSManager__getValidator1ResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getValidator1(
    blsPubKeyHash: Bytes,
  ): ethereum.CallResult<UniFiAVSManager__getValidator1ResultValue0Struct> {
    let result = super.tryCall(
      "getValidator",
      "getValidator(bytes32):((address,address,uint64,uint8,bytes,uint256,bool,bool))",
      [ethereum.Value.fromFixedBytes(blsPubKeyHash)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<UniFiAVSManager__getValidator1ResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getValidators(
    blsPubKeyHashes: Array<Bytes>,
  ): Array<UniFiAVSManager__getValidatorsResultValue0Struct> {
    let result = super.call(
      "getValidators",
      "getValidators(bytes32[]):((address,address,uint64,uint8,bytes,uint256,bool,bool)[])",
      [ethereum.Value.fromFixedBytesArray(blsPubKeyHashes)],
    );

    return result[0].toTupleArray<UniFiAVSManager__getValidatorsResultValue0Struct>();
  }

  try_getValidators(
    blsPubKeyHashes: Array<Bytes>,
  ): ethereum.CallResult<
    Array<UniFiAVSManager__getValidatorsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getValidators",
      "getValidators(bytes32[]):((address,address,uint64,uint8,bytes,uint256,bool,bool)[])",
      [ethereum.Value.fromFixedBytesArray(blsPubKeyHashes)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<UniFiAVSManager__getValidatorsResultValue0Struct>(),
    );
  }

  isConsumingScheduledOp(): Bytes {
    let result = super.call(
      "isConsumingScheduledOp",
      "isConsumingScheduledOp():(bytes4)",
      [],
    );

    return result[0].toBytes();
  }

  try_isConsumingScheduledOp(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "isConsumingScheduledOp",
      "isConsumingScheduledOp():(bytes4)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isValidatorInChainId(blsPubKeyHash: Bytes, chainId: BigInt): boolean {
    let result = super.call(
      "isValidatorInChainId",
      "isValidatorInChainId(bytes32,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(blsPubKeyHash),
        ethereum.Value.fromUnsignedBigInt(chainId),
      ],
    );

    return result[0].toBoolean();
  }

  try_isValidatorInChainId(
    blsPubKeyHash: Bytes,
    chainId: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidatorInChainId",
      "isValidatorInChainId(bytes32,uint256):(bool)",
      [
        ethereum.Value.fromFixedBytes(blsPubKeyHash),
        ethereum.Value.fromUnsignedBigInt(chainId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get eigenPodManagerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get eigenDelegationManagerAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get avsDirectoryAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeregisterValidatorsCall extends ethereum.Call {
  get inputs(): DeregisterValidatorsCall__Inputs {
    return new DeregisterValidatorsCall__Inputs(this);
  }

  get outputs(): DeregisterValidatorsCall__Outputs {
    return new DeregisterValidatorsCall__Outputs(this);
  }
}

export class DeregisterValidatorsCall__Inputs {
  _call: DeregisterValidatorsCall;

  constructor(call: DeregisterValidatorsCall) {
    this._call = call;
  }

  get blsPubKeyHashes(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class DeregisterValidatorsCall__Outputs {
  _call: DeregisterValidatorsCall;

  constructor(call: DeregisterValidatorsCall) {
    this._call = call;
  }
}

export class FinishDeregisterOperatorCall extends ethereum.Call {
  get inputs(): FinishDeregisterOperatorCall__Inputs {
    return new FinishDeregisterOperatorCall__Inputs(this);
  }

  get outputs(): FinishDeregisterOperatorCall__Outputs {
    return new FinishDeregisterOperatorCall__Outputs(this);
  }
}

export class FinishDeregisterOperatorCall__Inputs {
  _call: FinishDeregisterOperatorCall;

  constructor(call: FinishDeregisterOperatorCall) {
    this._call = call;
  }
}

export class FinishDeregisterOperatorCall__Outputs {
  _call: FinishDeregisterOperatorCall;

  constructor(call: FinishDeregisterOperatorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get accessManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get initialDeregistrationDelay(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RegisterOperatorCall extends ethereum.Call {
  get inputs(): RegisterOperatorCall__Inputs {
    return new RegisterOperatorCall__Inputs(this);
  }

  get outputs(): RegisterOperatorCall__Outputs {
    return new RegisterOperatorCall__Outputs(this);
  }
}

export class RegisterOperatorCall__Inputs {
  _call: RegisterOperatorCall;

  constructor(call: RegisterOperatorCall) {
    this._call = call;
  }

  get operatorSignature(): RegisterOperatorCallOperatorSignatureStruct {
    return changetype<RegisterOperatorCallOperatorSignatureStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class RegisterOperatorCall__Outputs {
  _call: RegisterOperatorCall;

  constructor(call: RegisterOperatorCall) {
    this._call = call;
  }
}

export class RegisterOperatorCallOperatorSignatureStruct extends ethereum.Tuple {
  get signature(): Bytes {
    return this[0].toBytes();
  }

  get salt(): Bytes {
    return this[1].toBytes();
  }

  get expiry(): BigInt {
    return this[2].toBigInt();
  }
}

export class RegisterOperatorWithCommitmentCall extends ethereum.Call {
  get inputs(): RegisterOperatorWithCommitmentCall__Inputs {
    return new RegisterOperatorWithCommitmentCall__Inputs(this);
  }

  get outputs(): RegisterOperatorWithCommitmentCall__Outputs {
    return new RegisterOperatorWithCommitmentCall__Outputs(this);
  }
}

export class RegisterOperatorWithCommitmentCall__Inputs {
  _call: RegisterOperatorWithCommitmentCall;

  constructor(call: RegisterOperatorWithCommitmentCall) {
    this._call = call;
  }

  get operatorSignature(): RegisterOperatorWithCommitmentCallOperatorSignatureStruct {
    return changetype<RegisterOperatorWithCommitmentCallOperatorSignatureStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get initialCommitment(): RegisterOperatorWithCommitmentCallInitialCommitmentStruct {
    return changetype<RegisterOperatorWithCommitmentCallInitialCommitmentStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class RegisterOperatorWithCommitmentCall__Outputs {
  _call: RegisterOperatorWithCommitmentCall;

  constructor(call: RegisterOperatorWithCommitmentCall) {
    this._call = call;
  }
}

export class RegisterOperatorWithCommitmentCallOperatorSignatureStruct extends ethereum.Tuple {
  get signature(): Bytes {
    return this[0].toBytes();
  }

  get salt(): Bytes {
    return this[1].toBytes();
  }

  get expiry(): BigInt {
    return this[2].toBigInt();
  }
}

export class RegisterOperatorWithCommitmentCallInitialCommitmentStruct extends ethereum.Tuple {
  get delegateKey(): Bytes {
    return this[0].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[1].toBigInt();
  }
}

export class RegisterValidatorsCall extends ethereum.Call {
  get inputs(): RegisterValidatorsCall__Inputs {
    return new RegisterValidatorsCall__Inputs(this);
  }

  get outputs(): RegisterValidatorsCall__Outputs {
    return new RegisterValidatorsCall__Outputs(this);
  }
}

export class RegisterValidatorsCall__Inputs {
  _call: RegisterValidatorsCall;

  constructor(call: RegisterValidatorsCall) {
    this._call = call;
  }

  get podOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get blsPubKeyHashes(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class RegisterValidatorsCall__Outputs {
  _call: RegisterValidatorsCall;

  constructor(call: RegisterValidatorsCall) {
    this._call = call;
  }
}

export class SetAuthorityCall extends ethereum.Call {
  get inputs(): SetAuthorityCall__Inputs {
    return new SetAuthorityCall__Inputs(this);
  }

  get outputs(): SetAuthorityCall__Outputs {
    return new SetAuthorityCall__Outputs(this);
  }
}

export class SetAuthorityCall__Inputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }

  get newAuthority(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAuthorityCall__Outputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }
}

export class SetChainIDCall extends ethereum.Call {
  get inputs(): SetChainIDCall__Inputs {
    return new SetChainIDCall__Inputs(this);
  }

  get outputs(): SetChainIDCall__Outputs {
    return new SetChainIDCall__Outputs(this);
  }
}

export class SetChainIDCall__Inputs {
  _call: SetChainIDCall;

  constructor(call: SetChainIDCall) {
    this._call = call;
  }

  get index(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get chainID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetChainIDCall__Outputs {
  _call: SetChainIDCall;

  constructor(call: SetChainIDCall) {
    this._call = call;
  }
}

export class SetDeregistrationDelayCall extends ethereum.Call {
  get inputs(): SetDeregistrationDelayCall__Inputs {
    return new SetDeregistrationDelayCall__Inputs(this);
  }

  get outputs(): SetDeregistrationDelayCall__Outputs {
    return new SetDeregistrationDelayCall__Outputs(this);
  }
}

export class SetDeregistrationDelayCall__Inputs {
  _call: SetDeregistrationDelayCall;

  constructor(call: SetDeregistrationDelayCall) {
    this._call = call;
  }

  get newDelay(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDeregistrationDelayCall__Outputs {
  _call: SetDeregistrationDelayCall;

  constructor(call: SetDeregistrationDelayCall) {
    this._call = call;
  }
}

export class SetOperatorCommitmentCall extends ethereum.Call {
  get inputs(): SetOperatorCommitmentCall__Inputs {
    return new SetOperatorCommitmentCall__Inputs(this);
  }

  get outputs(): SetOperatorCommitmentCall__Outputs {
    return new SetOperatorCommitmentCall__Outputs(this);
  }
}

export class SetOperatorCommitmentCall__Inputs {
  _call: SetOperatorCommitmentCall;

  constructor(call: SetOperatorCommitmentCall) {
    this._call = call;
  }

  get newCommitment(): SetOperatorCommitmentCallNewCommitmentStruct {
    return changetype<SetOperatorCommitmentCallNewCommitmentStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }
}

export class SetOperatorCommitmentCall__Outputs {
  _call: SetOperatorCommitmentCall;

  constructor(call: SetOperatorCommitmentCall) {
    this._call = call;
  }
}

export class SetOperatorCommitmentCallNewCommitmentStruct extends ethereum.Tuple {
  get delegateKey(): Bytes {
    return this[0].toBytes();
  }

  get chainIDBitMap(): BigInt {
    return this[1].toBigInt();
  }
}

export class StartDeregisterOperatorCall extends ethereum.Call {
  get inputs(): StartDeregisterOperatorCall__Inputs {
    return new StartDeregisterOperatorCall__Inputs(this);
  }

  get outputs(): StartDeregisterOperatorCall__Outputs {
    return new StartDeregisterOperatorCall__Outputs(this);
  }
}

export class StartDeregisterOperatorCall__Inputs {
  _call: StartDeregisterOperatorCall;

  constructor(call: StartDeregisterOperatorCall) {
    this._call = call;
  }
}

export class StartDeregisterOperatorCall__Outputs {
  _call: StartDeregisterOperatorCall;

  constructor(call: StartDeregisterOperatorCall) {
    this._call = call;
  }
}

export class UpdateAVSMetadataURICall extends ethereum.Call {
  get inputs(): UpdateAVSMetadataURICall__Inputs {
    return new UpdateAVSMetadataURICall__Inputs(this);
  }

  get outputs(): UpdateAVSMetadataURICall__Outputs {
    return new UpdateAVSMetadataURICall__Outputs(this);
  }
}

export class UpdateAVSMetadataURICall__Inputs {
  _call: UpdateAVSMetadataURICall;

  constructor(call: UpdateAVSMetadataURICall) {
    this._call = call;
  }

  get _metadataURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateAVSMetadataURICall__Outputs {
  _call: UpdateAVSMetadataURICall;

  constructor(call: UpdateAVSMetadataURICall) {
    this._call = call;
  }
}

export class UpdateOperatorCommitmentCall extends ethereum.Call {
  get inputs(): UpdateOperatorCommitmentCall__Inputs {
    return new UpdateOperatorCommitmentCall__Inputs(this);
  }

  get outputs(): UpdateOperatorCommitmentCall__Outputs {
    return new UpdateOperatorCommitmentCall__Outputs(this);
  }
}

export class UpdateOperatorCommitmentCall__Inputs {
  _call: UpdateOperatorCommitmentCall;

  constructor(call: UpdateOperatorCommitmentCall) {
    this._call = call;
  }
}

export class UpdateOperatorCommitmentCall__Outputs {
  _call: UpdateOperatorCommitmentCall;

  constructor(call: UpdateOperatorCommitmentCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
